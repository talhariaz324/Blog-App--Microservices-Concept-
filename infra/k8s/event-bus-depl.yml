# Setting deployment and also making clusterIP for this Pod as well
apiVersion: apps/v1
kind: Deployment
metadata:
  name: event-bus-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: event-bus
  template:
    metadata:
      labels:
        app: event-bus
    spec:
      containers:
        - name: event-bus
          image: talhariaz324/event-bus:latest

#Cluster Ip
---
apiVersion: v1
kind: Service
metadata:
  name: event-bus-srv
spec:
  selector:
    app: event-bus
  ports:
    - name: event-bus
      protocol: TCP
      port: 4005
      targetPort: 4005

      #  We make the clusterIps of the posts and event bus.
      #  So that these 2 pods can communicate.
      # If someone adds the post then event generated by the post should go to the event bus and event bus also send to the
      #  other pods of the k8s cluster. Here as we have only post and event bus so event bus get back to post using its cluster ip
# After making clustersIP do: kubectl apply -f posts-depl.yml and   kubectl apply -f event-bus-depl.yml
# Change the endpoints in posts and event bus so that now as we are in k8s so the communication will done using those clusterIps.
# After changing endpoints, again build and push image to docker of both.
# restart the depl as well of both: kubectl rollout restart deployment <deployment-name>

#  We will check this using the postman. as postman outside so we request from outside TCP/IP and then come to nodeport and then req send to
#  posts and post will be created and event generated by the post to the event bus using its cluster and event bus also generate event
#  towards the posts using its clusterIp service

# Postman: http://minicubeIp:TCPIP/posts where posts is the name of pod to which the nodeport is pointing. http://192.168.39.53:32009/posts
# minicubeip command: minikube ip
# kubectl get services gives all services and in the nodeport get the tcp ip.

# when we create the post from the postman then it create the post and then we come back and check the logs of post pod
# If the log console.log(postCreated) means event bus also returning the event. so all successful.
